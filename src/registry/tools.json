{
  "version": "2.0",
  "metadata": {
    "created": "2025-08-19",
    "description": "Mem0 MCP工具服务注册表 - 智能内存管理工具集合",
    "protocol_version": "2025-06-18"
  },
  "services": {
    "mem0_add_memory": {
      "name": "mem0_add_memory",
      "title": "智能内存添加服务",
      "description": "向Mem0平台添加新的智能内存，支持从对话中自动提取关键信息并进行冲突解决。提供上下文感知、图形关系和多模态等多种添加策略，确保内存的准确性和完整性。",
      "version": "1.0.0",
      "category": "memory",
      "endpoint": "src.services.add_memory.service:AddMemoryService",
      "strategies": [
        {
          "name": "contextual",
          "description": "基于上下文的智能内存添加，自动分析对话上下文提取关键信息",
          "default": true
        },
        {
          "name": "graph",
          "description": "基于图形关系的内存添加，建立和维护内存间的语义关联网络"
        },
        {
          "name": "multimodal", 
          "description": "多模态内存支持，处理图像、音频、文本等多种数据类型"
        }
      ],
      "schema": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "description": "需要提取内存的对话消息列表，包含用户和助手的交互内容",
            "items": {
              "type": "object",
              "properties": {
                "role": {"type": "string", "enum": ["user", "assistant"]},
                "content": {"type": "string"}
              }
            }
          },
          "user_id": {
            "type": "string",
            "description": "唯一用户标识符，用于关联和管理用户的个人内存空间"
          },
          "enable_graph": {
            "type": "boolean",
            "description": "是否启用图形关系内存，建立内存间的语义连接",
            "default": false
          },
          "metadata": {
            "type": "object", 
            "description": "附加元数据信息，用于丰富内存的描述和分类"
          },
          "infer": {
            "type": "boolean",
            "description": "是否启用自动事实推理，从对话中推断隐含信息",
            "default": true
          }
        },
        "required": ["messages", "user_id"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "message": {"type": "string"},
          "memory_id": {"type": "string"},
          "extracted_facts": {"type": "array"}
        }
      },
      "dependencies": [],
      "health_check": "/health",
      "metrics": "/metrics"
    },
    
    "mem0_search_memories": {
      "name": "mem0_search_memories",
      "title": "智能内存搜索服务", 
      "description": "高级内存搜索服务，支持语义相似度、图形关系、高级检索和混合等多种搜索策略。提供精准的过滤和排序功能，帮助用户快速找到相关内存内容。",
      "version": "1.0.0",
      "category": "memory",
      "endpoint": "src.services.search_memories.service:SearchMemoriesService",
      "strategies": [
        {
          "name": "semantic",
          "description": "语义向量相似度搜索，基于内容的语义理解进行匹配",
          "default": true
        },
        {
          "name": "graph",
          "description": "基于图形关系的搜索，利用内存间的关联网络进行检索"
        },
        {
          "name": "advanced_retrieval",
          "description": "高级检索策略，包含结果重排序和多级过滤优化"
        },
        {
          "name": "hybrid",
          "description": "混合搜索策略，综合多种搜索方法提高检索准确性"
        }
      ],
      "schema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "自然语言搜索查询，支持中文和英文的语义理解"
          },
          "user_id": {
            "type": "string", 
            "description": "用户标识符，用于限定搜索范围在特定用户的内存空间"
          },
          "filters": {
            "type": "object",
            "description": "高级过滤条件，可按时间、标签、类型等维度筛选结果"
          },
          "strategy": {
            "type": "string",
            "description": "要使用的搜索策略，可选语义、图形、高级或混合模式",
            "default": "semantic",
            "enum": ["semantic", "graph", "advanced_retrieval", "hybrid"]
          },
          "top_k": {
            "type": "integer",
            "description": "返回结果的最大数量，用于控制输出规模",
            "default": 10,
            "maximum": 100
          },
          "threshold": {
            "type": "number",
            "description": "最低相似度阈值，过滤掉相关性较低的结果",
            "default": 0.7,
            "minimum": 0.0,
            "maximum": 1.0
          }
        },
        "required": ["query", "user_id"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "message": {"type": "string"},
          "memories": {"type": "array"},
          "total_count": {"type": "integer"}
        }
      },
      "dependencies": [],
      "health_check": "/health",
      "metrics": "/metrics"
    },

    "mem0_update_memory": {
      "name": "mem0_update_memory",
      "title": "内存更新服务",
      "description": "更新已存在的内存内容和元数据信息。支持单个内存更新和批量更新两种模式，确保内存数据的准确性和时效性。",
      "version": "1.0.0", 
      "category": "memory",
      "endpoint": "src.services.update_memory.service:UpdateMemoryService",
      "strategies": [
        {
          "name": "single",
          "description": "单个内存更新模式，根据ID更新指定的单个内存记录",
          "default": true
        },
        {
          "name": "batch", 
          "description": "批量更新模式，同时更新多个内存记录提高效率"
        }
      ],
      "schema": {
        "type": "object",
        "properties": {
          "memory_id": {
            "type": "string",
            "description": "要更新的内存记录的唯一标识符"
          },
          "text": {
            "type": "string",
            "description": "新的内存内容文本，用于替换原有内容"
          },
          "metadata": {
            "type": "object",
            "description": "更新的元数据信息，用于修改内存的属性和标签"
          },
          "batch_updates": {
            "type": "array",
            "description": "批量更新操作列表，包含多个更新任务的详细信息",
            "items": {
              "type": "object",
              "properties": {
                "memory_id": {"type": "string"},
                "text": {"type": "string"},
                "metadata": {"type": "object"}
              }
            }
          }
        }
      },
      "output_schema": {
        "type": "object", 
        "properties": {
          "status": {"type": "string"},
          "message": {"type": "string"},
          "updated_count": {"type": "integer"}
        }
      },
      "dependencies": [],
      "health_check": "/health",
      "metrics": "/metrics"
    },

    "mem0_delete_memory": {
      "name": "mem0_delete_memory",
      "title": "内存删除服务",
      "description": "删除指定的内存记录，支持按ID、批量删除和按条件过滤删除等多种方式。提供安全的删除机制，防止意外数据丢失。",
      "version": "1.0.0",
      "category": "memory", 
      "endpoint": "src.services.delete_memory.service:DeleteMemoryService",
      "strategies": [
        {
          "name": "single",
          "description": "单个删除模式，根据ID删除指定的单个内存记录",
          "default": true
        },
        {
          "name": "batch",
          "description": "批量删除模式，同时删除多个内存记录提高效率"
        },
        {
          "name": "filtered",
          "description": "按条件过滤删除，根据特定条件批量删除符合要求的内存"
        }
      ],
      "schema": {
        "type": "object",
        "properties": {
          "memory_id": {
            "type": "string",
            "description": "要删除的内存记录的唯一标识符"
          },
          "user_id": {
            "type": "string",
            "description": "用户标识符，用于删除指定用户的所有内存记录"
          },
          "filters": {
            "type": "object",
            "description": "删除的过滤条件，用于指定需要删除的内存范围"
          },
          "batch_deletes": {
            "type": "array",
            "description": "批量删除操作列表，包含多个删除任务的详细信息",
            "items": {
              "type": "object",
              "properties": {
                "memory_id": {"type": "string"}
              }
            }
          }
        }
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "message": {"type": "string"},
          "deleted_count": {"type": "integer"}
        }
      },
      "dependencies": [],
      "health_check": "/health", 
      "metrics": "/metrics"
    },

    "mem0_selective_memory": {
      "name": "mem0_selective_memory",
      "title": "选择性内存服务",
      "description": "聚合式选择性内存操作服务，根据特定条件自动选择和执行相应的内存操作。集成了添加、搜索、更新和删除功能，提供一站式内存管理解决方案。",
      "version": "1.0.0",
      "category": "aggregated",
      "endpoint": "src.services.selective_memory.service:SelectiveMemoryService",
      "strategies": [
        {
          "name": "criteria_based",
          "description": "基于条件的内存选择，根据用户定义的条件智能筛选内存",
          "default": true
        }
      ],
      "schema": {
        "type": "object",
        "properties": {
          "criteria": {
            "type": "object",
            "description": "选择条件配置，定义内存筛选的具体规则和条件"
          },
          "operation": {
            "type": "string",
            "enum": ["add", "search", "update", "delete"],
            "description": "要对选中内存执行的操作类型：添加、搜索、更新或删除"
          }
        },
        "required": ["criteria", "operation"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "message": {"type": "string"},
          "results": {"type": "array"}
        }
      },
      "dependencies": ["mem0_add_memory", "mem0_search_memories", "mem0_update_memory", "mem0_delete_memory"],
      "health_check": "/health",
      "metrics": "/metrics"
    },

    "mem0_criteria_retrieval": {
      "name": "mem0_criteria_retrieval", 
      "title": "条件检索服务",
      "description": "专业化的条件检索服务，基于复杂条件进行高级内存检索。支持多维度条件评估和匹配度计算，为精准内存检索提供专业工具。",
      "version": "1.0.0",
      "category": "specialized",
      "endpoint": "src.services.criteria_retrieval.service:CriteriaRetrievalService",
      "strategies": [
        {
          "name": "advanced_criteria",
          "description": "高级条件评估，支持复杂的多维度条件匹配和评分",
          "default": true
        }
      ],
      "schema": {
        "type": "object",
        "properties": {
          "criteria": {
            "type": "object",
            "description": "复杂检索条件配置，支持多层级和多维度的条件组合"
          },
          "user_id": {
            "type": "string",
            "description": "用户标识符，用于限定检索范围在特定用户的内存空间"
          }
        },
        "required": ["criteria", "user_id"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "message": {"type": "string"},
          "memories": {"type": "array"},
          "criteria_match_score": {"type": "number"}
        }
      },
      "dependencies": ["mem0_search_memories"],
      "health_check": "/health",
      "metrics": "/metrics"
    }
  },
  
  "global_config": {
    "max_retries": 3,
    "timeout_seconds": 30,
    "circuit_breaker": {
      "failure_threshold": 5,
      "reset_timeout_seconds": 60
    },
    "rate_limiting": {
      "requests_per_minute": 1000,
      "burst_size": 100
    }
  }
}